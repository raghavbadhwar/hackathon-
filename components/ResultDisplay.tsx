import React from 'react';
import type { GeminiResponse } from '../types';

interface ResultDisplayProps {
  originalImage: string | null;
  generatedImage: GeminiResponse;
}

export const ResultDisplay: React.FC<ResultDisplayProps> = ({ originalImage, generatedImage }) => {

  const handleDownload = (imageUrl: string) => {
    if (!imageUrl) return;
    const link = document.createElement('a');
    link.href = imageUrl;
    link.download = `kalamitra-ai-image-${new Date().getTime()}.png`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  const generatedImageUrl = generatedImage.imageUrls?.[0];

  if (!generatedImageUrl) {
    return null;
  }

  return (
    <div className="bg-white p-6 md:p-8 rounded-2xl shadow-lg border border-slate-200 animate-fade-in">
      <h2 className="text-2xl md:text-3xl font-bold text-[#0E5A6A] text-center mb-8">Your AI-Generated Photoshoot</h2>
      
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Original Image */}
        <div>
          <h3 className="text-lg font-semibold text-[#0E5A6A] text-center mb-4">Original</h3>
          <div className="aspect-square bg-slate-100 rounded-lg flex items-center justify-center overflow-hidden border">
            {originalImage && (
              <img src={originalImage} alt="Original product" className="max-h-full max-w-full object-contain" />
            )}
          </div>
        </div>

        {/* Generated Image */}
        <div>
          <h3 className="text-lg font-semibold text-[#0E5A6A] text-center mb-4">AI-Generated</h3>
          <div>
            <div className="aspect-square bg-slate-100 rounded-lg flex items-center justify-center overflow-hidden border relative group">
              <img src={generatedImageUrl} alt="AI generated scene" className="max-h-full max-w-full object-contain" />
              <div className="absolute bottom-2 right-2">
                  <div className="relative group/tooltip">
                      <span className="bg-black/60 text-white text-xs font-semibold px-2 py-1 rounded-md">AI-EDITED</span>
                      <div className="absolute bottom-full mb-2 right-0 w-48 bg-slate-800 text-white text-xs rounded py-1 px-2 text-center opacity-0 group-hover/tooltip:opacity-100 transition-opacity duration-300 pointer-events-none">
                          This image was generated by AI and includes a SynthID watermark.
                          <div className="absolute top-full right-4 w-0 h-0 border-x-4 border-x-transparent border-t-4 border-t-slate-800"></div>
                      </div>
                  </div>
              </div>
            </div>
            <div className="mt-4 text-center">
              <button
                onClick={() => handleDownload(generatedImageUrl)}
                className="inline-flex items-center justify-center bg-[#EA580C] hover:bg-[#c2410c] text-white font-bold py-2 px-4 rounded-lg transition-colors text-sm"
                aria-label="Download AI-generated image"
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 mr-1.5" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={2}>
                    <path strokeLinecap="round" strokeLinejoin="round" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                </svg>
                Download
              </button>
            </div>
          </div>
        </div>
      </div>
      
      {generatedImage.text && (
        <div className="mt-8">
            <h3 className="text-lg font-semibold text-[#0E5A6A] mb-2">AI Suggestions:</h3>
            <div className="bg-[#EA580C]/10 border-l-4 border-[#EA580C] text-[#9A3412] p-4 rounded-r-lg" role="note">
                <p>{generatedImage.text}</p>
            </div>
        </div>
      )}

      {/* Add fade-in animation */}
      <style>{`
        @keyframes fadeIn {
          from { opacity: 0; transform: translateY(20px); }
          to { opacity: 1; transform: translateY(0); }
        }
        .animate-fade-in {
          animation: fadeIn 0.5s ease-out forwards;
        }
      `}</style>
    </div>
  );
};